{"version":3,"sources":["publish.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,MAAT,QAAuB,gCAAvB;;AAEA,SAAS,OAAT,QAAwB,cAAxB;;AAEA,IAAI,OAAO,QAAP,EAAiB;AACjB,WAAO,OAAP,CAAe,SAAf,EAA0B,UAAS,OAAT,EAAkB,YAAlB,EAAgC;;AAGtD,cAAM,WAAW;AACb,iBAAK,CAAC;;AAEF,sBAAM,CAAC;AACH,4BAAQ,IAAR;iBADE,EAEH;AACC,4BAAQ;AACJ,iCAAS,IAAT;qBADJ;iBAHE,CAAN;aAFC,EASF;;AAEC,sBAAM,CAAC;AACH,2BAAO,KAAK,MAAL;iBADL,EAEH;AACC,2BAAO;AACH,iCAAS,IAAT;qBADJ;iBAHE,CAAN;aAXC,EAkBF;;AAEC,sBAAM,CAAC;AACH,6BAAS,KAAK,MAAL;iBADP,EAEH;AACC,6BAAS;AACL,iCAAS,IAAT;qBADJ;iBAHE,CAAN;aApBC,CAAL;SADE,CAHgD;AAiCtD,YAAI,OAAO,YAAP,KAAwB,QAAxB,IAAoC,aAAa,MAAb,EAAqB;AACzD,qBAAS,IAAT,GAAgB;AACZ,wBAAQ,CAAC,EAAD,GAAK,YAAL,EAAkB,EAAlB,CAAR;AACA,0BAAW,GAAX;aAFJ,CADyD;SAA7D;;AAOA,eAAO,OAAP,CAAe,IAAf,EAAqB,iBAArB,EAAwC,QAAQ,IAAR,CAAa,QAAb,CAAxC,EAAgE;AAC5D,qBAAS,IAAT;SADJ,EAxCsD;AA2CtD,eAAO,QAAQ,IAAR,CAAa,QAAb,EAAuB,OAAvB,CAAP,CA3CsD;KAAhC,CAA1B,CADiB;CAArB","file":"publish-compiled.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Counts } from 'meteor/tmeasday:publish-counts';\n\nimport { Parties } from './collection';\n\nif (Meteor.isServer) {\n    Meteor.publish('fcLists', function(options, searchString) {\n\n\n        const selector = {\n            $or: [{\n                // the public fcLists\n                $and: [{\n                    public: true\n                }, {\n                    public: {\n                        $exists: true\n                    }\n                }]\n            }, {\n                // when logged in user is the owner\n                $and: [{\n                    owner: this.userId\n                }, {\n                    owner: {\n                        $exists: true\n                    }\n                }]\n            }, {\n                // when logged in user is one of invited\n                $and: [{\n                    invited: this.userId\n                }, {\n                    invited: {\n                        $exists: true\n                    }\n                }]\n            }]\n        };\n        if (typeof searchString === 'string' && searchString.length) {\n            selector.name = {\n                $regex: `.*${searchString}.*`,\n                $options : 'i'\n            };\n        }\n\n        Counts.publish(this, 'numberOfParties', Parties.find(selector), {\n            noReady: true\n        });\n        return Parties.find(selector, options);\n\n    });\n}"]}