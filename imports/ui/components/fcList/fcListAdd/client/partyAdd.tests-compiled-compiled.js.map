{"version":3,"sources":["fcListAdd.tests-compiled.js"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAR,QAAwB,aAAjC;AACA,SAAS,OAAT,QAAwB,yBAAxB;AACA,OAAO,eAAP;;AAEA,SAAS,UAAT,EAAqB,MAAM;AACzB,aAAW,MAAM;AACf,WAAO,MAAP,CAAc,QAAd,EADe;GAAN,CAAX,CADyB;;AAKzB,WAAS,YAAT,EAAuB,MAAM;AAC3B,QAAI,UAAJ,CAD2B;AAE3B,UAAM,QAAQ;AACZ,YAAM,KAAN;AACA,mBAAa,iBAAb;KAFI,CAFqB;;AAO3B,eAAW,MAAM;AACf,aAAO,CAAC,UAAD,EAAa,oBAAb,KAAsC;AAC3C,qBAAa,qBAAqB,QAArB,EAA+B;AAC1C,kBAAQ,WAAW,IAAX,CAAgB,IAAhB,CAAR;SADW,CAAb,CAD2C;OAAtC,CAAP,CADe;KAAN,CAAX,CAP2B;;AAe3B,aAAS,SAAT,EAAoB,MAAM;AACxB,SAAG,8BAAH,EAAmC,MAAM;AACvC,mBAAW,KAAX,GAAmB,KAAnB,CADuC;AAEvC,mBAAW,KAAX,GAFuC;;AAIvC,eAAO,WAAW,KAAX,CAAP,CAAyB,OAAzB,CAAiC,EAAjC,EAJuC;OAAN,CAAnC,CADwB;KAAN,CAApB,CAf2B;;AAwB3B,aAAS,UAAT,EAAqB,MAAM;AACzB,iBAAW,MAAM;AACf,cAAM,OAAN,EAAe,QAAf,EADe;AAEf,cAAM,UAAN,EAAkB,OAAlB,EAA2B,GAA3B,CAA+B,WAA/B,GAFe;;AAIf,mBAAW,KAAX,GAAmB,KAAnB,CAJe;;AAMf,mBAAW,MAAX,GANe;OAAN,CAAX,CADyB;;AAUzB,SAAG,2BAAH,EAAgC,MAAM;AACpC,eAAO,QAAQ,MAAR,CAAP,CAAuB,oBAAvB,CAA4C,KAA5C,EADoC;OAAN,CAAhC,CAVyB;;AAczB,SAAG,qBAAH,EAA0B,MAAM;AAC9B,eAAO,WAAW,KAAX,CAAP,CAAyB,gBAAzB,GAD8B;OAAN,CAA1B,CAdyB;KAAN,CAArB,CAxB2B;GAAN,CAAvB,CALyB;CAAN,CAArB","file":"fcListAdd.tests-compiled-compiled.js","sourcesContent":["import { name as PartyAdd } from '../fcListAdd';\nimport { Parties } from '../../../../api/fcLists';\nimport 'angular-mocks';\n\ndescribe('PartyAdd', () => {\n  beforeEach(() => {\n    window.module(PartyAdd);\n  });\n\n  describe('controller', () => {\n    let controller;\n    const fcList = {\n      name: 'Foo',\n      description: 'Birthday of Foo'\n    };\n\n    beforeEach(() => {\n      inject(($rootScope, $componentController) => {\n        controller = $componentController(PartyAdd, {\n          $scope: $rootScope.$new(true)\n        });\n      });\n    });\n\n    describe('reset()', () => {\n      it('should clean up fcList object', () => {\n        controller.fcList = fcList;\n        controller.reset();\n\n        expect(controller.fcList).toEqual({});\n      });\n    });\n\n    describe('submit()', () => {\n      beforeEach(() => {\n        spyOn(Parties, 'insert');\n        spyOn(controller, 'reset').and.callThrough();\n\n        controller.fcList = fcList;\n\n        controller.submit();\n      });\n\n      it('should insert a new fcList', () => {\n        expect(Parties.insert).toHaveBeenCalledWith(fcList);\n      });\n\n      it('should call reset()', () => {\n        expect(controller.reset).toHaveBeenCalled();\n      });\n    });\n  });\n});\n\n//# sourceMappingURL=fcListAdd.tests-compiled.js.map"]}