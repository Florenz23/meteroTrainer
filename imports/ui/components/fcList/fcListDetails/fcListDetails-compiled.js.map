{"version":3,"sources":["fcListDetails.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,aAAP,MAA0B,gBAA1B;AACA,OAAO,QAAP,MAAqB,mBAArB;AACA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,sBAAP;AACA,SAAS,OAAT,QAAwB,yBAAxB;AACA,SAAS,QAAQ,cAAR,QAA8B,oCAAvC;;AAEA,MAAM,YAAN,CAAmB;AACf,gBAAY,YAAZ,EAA0B,MAA1B,EAAkC,SAAlC,EAA6C;AACzC,mBADyC;;AAGzC,kBAAU,IAAV,EAAgB,MAAhB,CAAuB,MAAvB,EAHyC;;AAKzC,aAAK,QAAL,GAAgB,aAAa,QAAb,CALyB;AAMzC,aAAK,SAAL,CAAe,SAAf,EANyC;AAOzC,aAAK,SAAL,CAAe,OAAf,EAPyC;;AASzC,aAAK,OAAL,CAAa;AACT,qBAAS;AACL,uBAAO,QAAQ,OAAR,CAAgB;AACnB,yBAAK,aAAa,QAAb;iBADF,CAAP,CADK;aAAT;AAKA,oBAAQ;AACJ,uBAAO,OAAO,KAAP,CAAa,IAAb,CAAkB,EAAlB,CAAP,CADI;aAAR;AAGA,yBAAa;AACb,uBAAO,CAAC,CAAC,OAAO,MAAP,EAAD,CADK;aAAb;;SATJ,EATyC;KAA7C;AAwBA,gBAAY;AACR,YAAI,CAAC,KAAK,MAAL,EAAa;AACd,mBAAO,KAAP,CADc;SAAlB;;AAIA,eAAO,CAAC,KAAK,MAAL,CAAY,MAAZ,IAAsB,KAAK,MAAL,CAAY,KAAZ,KAAsB,OAAO,MAAP,EAAtB,CALtB;KAAZ;AAOA,WAAO;AACH,gBAAQ,MAAR,CAAe;AACX,iBAAK,KAAK,MAAL,CAAY,GAAZ;SADT,EAEG;AACC,kBAAM;AACF,sBAAM,KAAK,MAAL,CAAY,IAAZ;AACN,6BAAa,KAAK,MAAL,CAAY,WAAZ;AACb,wBAAQ,KAAK,MAAL,CAAY,MAAZ;aAHZ;SAHJ,EAQG,SAAW;AACV,gBAAI,KAAJ,EAAW;AACP,wBAAQ,GAAR,CAAY,sCAAZ,EADO;aAAX,MAEO;AACH,wBAAQ,GAAR,CAAY,OAAZ,EADG;aAFP;SADD,CARH,CADG;KAAP;CAhCJ;;AAmDA,MAAM,OAAO,eAAP;;;AAGN,eAAe,QAAQ,MAAR,CAAe,IAAf,EAAqB,CAChC,aADgC,EAEhC,QAFgC,EAGhC,cAHgC,CAArB,EAIZ,SAJY,CAIF,IAJE,EAII;AACf,iBAAa,CAAC,6BAAD,GAAgC,IAAhC,EAAqC,CAArC,GAAwC,IAAxC,EAA6C,KAA7C,CAAb;AACA,kBAAc,IAAd;AACA,gBAAY,YAAZ;CAPW,EASV,MATU,CASH,MATG,CAAf;;AAWA,SAAS,MAAT,CAAgB,cAAhB,EAAgC;AAC5B,eAD4B;;AAG5B,mBAAe,KAAf,CAAqB,eAArB,EAAsC;AAClC,aAAK,oBAAL;AACA,kBAAU,mCAAV;AACA,iBAAS;AACL,wBAAY,EAAZ,EAAgB;AACZ,oBAAI,OAAO,MAAP,OAAoB,IAApB,EAA0B;AAC1B,2BAAO,GAAG,MAAH,CAAU,eAAV,CAAP,CAD0B;iBAA9B,MAEO;AACH,2BAAO,GAAG,OAAH,EAAP,CADG;iBAFP;aADJ;SADJ;KAHJ,EAH4B;CAAhC","file":"fcListDetails-compiled.js","sourcesContent":["import angular from 'angular';\nimport angularMeteor from 'angular-meteor';\nimport uiRouter from 'angular-ui-router';\nimport { Meteor } from 'meteor/meteor';\n\nimport './fcListDetails.html';\nimport { Parties } from '../../../../api/fcLists';\nimport { name as PartyUninvited } from '../fcListUninvited/fcListUninvited';\n\nclass PartyDetails {\n    constructor($stateParams, $scope, $reactive) {\n        'ngInject';\n\n        $reactive(this).attach($scope);\n\n        this.fcListId = $stateParams.fcListId;\n        this.subscribe('fcLists');\n        this.subscribe('users');\n\n        this.helpers({\n            fcList() {\n                return Parties.findOne({\n                    _id: $stateParams.fcListId\n                });\n            },\n            users() {\n                return Meteor.users.find({});\n            },\n            isLoggedIn() {\n            return !!Meteor.userId();\n            }\n\n        });\n    }\n    canInvite() {\n        if (!this.fcList) {\n            return false;\n        }\n\n        return !this.fcList.public && this.fcList.owner === Meteor.userId();\n    }\n    save() {\n        Parties.update({\n            _id: this.fcList._id\n        }, {\n            $set: {\n                name: this.fcList.name,\n                description: this.fcList.description,\n                public: this.fcList.public\n            }\n        }, (error) => {\n            if (error) {\n                console.log('Oops, unable to update the fcList...');\n            } else {\n                console.log('Done!');\n            }\n        });\n    }\n}\n\nconst name = 'fcListDetails';\n\n// create a module\nexport default angular.module(name, [\n    angularMeteor,\n    uiRouter,\n    PartyUninvited\n]).component(name, {\n    templateUrl: `imports/ui/components/fcList/${name}/${name}.html`,\n    controllerAs: name,\n    controller: PartyDetails\n})\n    .config(config);\n\nfunction config($stateProvider) {\n    'ngInject';\n\n    $stateProvider.state('fcListDetails', {\n        url: '/fcLists/:fcListId',\n        template: '<fcList-details></fcList-details>',\n        resolve: {\n            currentUser($q) {\n                if (Meteor.userId() === null) {\n                    return $q.reject('AUTH_REQUIRED');\n                } else {\n                    return $q.resolve();\n                }\n            }\n        }\n    });\n};"]}